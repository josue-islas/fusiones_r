library(tidyquant) # Para descargar los datos
library(tidyr) # Permite manipular y transformar los datos
library(plotly) # Para hacer grÃ¡ficos chulos
library(recipes)
library(timetk) # Para manipular las series de tiempo
library(quantmod) # Para descargar los datos
library(xts) #Convertir dataframes en series de tiempo
library(tseries) #Trabajar con series de tiempo
library(forecast) #Pronosticar series de tiempo
library(timeSeries) #Trabajar con series de tiempo
library(tframePlus) #Trabajar con series de tiempo
library(ggplot2) #GrÃ¡ficos coquetos
library(dplyr) #GrÃ¡ficos coquetos y dinÃ¡micos
library(plotly) #GrÃ¡ficos coquetos y dinÃ¡micos
library(hrbrthemes) #Elegir diferentes diseÃ±os para grÃ¡ficos
library(ggthemes) #Elegir diferentes diseÃ±os para grÃ¡ficos
library(tidyverse)  # Permite manipular y transformar los datos
library(dygraphs) #GrÃ¡ficos dinÃ¡micos
library(gridExtra) #GrÃ¡ficos dinÃ¡micos
library(corrplot)
TickerList<- c("AZN", "BNGO", "MRNA", "NVAX", "PFE") # hat = gorrito, LOS INDICES SIEMPRE LLEVAN HAT
LosPreciosQueQuiero<- NULL
for (Ticker in TickerList)
LosPreciosQueQuiero <- cbind(LosPreciosQueQuiero, #cbind me permite combinar vectores de datos
getSymbols(Ticker, from="2020-06-01",  auto.assign =F ,src='yahoo') [,4]) #Mantiene solo el precio de cierre
View(LosPreciosQueQuiero)
PreciosCierre <- LosPreciosQueQuiero[apply(LosPreciosQueQuiero ,1,function(x) all(!is.na(x))),]
View(PreciosCierre)
colnames(PreciosCierre)<- c("AZN", "BNGO", "MRNA", "NVAX", "PFE")
View(PreciosCierre)
AZN<-PreciosCierre[,1]
BNGO<-PreciosCierre[,2]
MRNA<-PreciosCierre[,3]
NVAX<-PreciosCierre[,4]
PFE<-PreciosCierre[,5]
AZN_niveles <- ggplot(AZN, aes(x=Index, y=AZN)) +
ggtitle("Precio de Cierre Amazon: junio 2020 - septiembre 2021") +
geom_line(color="salmon") +
xlab("Fecha")+
ylab("Precio de cierre")
AZN_niveles              #GrÃ¡fico con ggplot
ggplotly(AZN_niveles)    #GrÃ¡fico con ggplotly
